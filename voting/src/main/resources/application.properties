quarkus.http.port=8080

#### Logging

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}]] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=false

mp.messaging.outgoing.voting.bootstrap.servers=my-cluster-kafka-bootstrap:9092
mp.messaging.outgoing.voting.topic=voting
mp.messaging.outgoing.voting.connector=smallrye-kafka
mp.messaging.outgoing.voting.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.voting.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.voting.voting.acks=1

mp.messaging.incoming.voting.bootstrap.servers=my-cluster-kafka-bootstrap:9092
mp.messaging.incoming.voting.topic=voting
mp.messaging.incoming.voting.connector=smallrye-kafka
mp.messaging.incoming.voting.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.voting.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# configure your datasource
quarkus.datasource.url: jdbc:postgresql://postgres:5432/voting
quarkus.datasource.driver: org.postgresql.Driver
quarkus.datasource.username: postgres
quarkus.datasource.password: postgres
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create


